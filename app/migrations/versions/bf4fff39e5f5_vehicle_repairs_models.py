"""vehicle repairs models

Revision ID: bf4fff39e5f5
Revises: 92cce0627ee7
Create Date: 2025-10-29 11:41:58.398046

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'bf4fff39e5f5'
down_revision: Union[str, Sequence[str], None] = '92cce0627ee7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('repair_installments',
    sa.Column('installment_id', sa.String(length=60), nullable=False, comment='Unique installment ID (e.g., RPR-2025-001-01)'),
    sa.Column('repair_id', sa.Integer(), nullable=False, comment='Parent repair invoice ID'),
    sa.Column('installment_number', sa.Integer(), nullable=False, comment='Sequential number within repair (1, 2, 3...)'),
    sa.Column('driver_id', sa.Integer(), nullable=False, comment='Driver ID from parent repair'),
    sa.Column('lease_id', sa.Integer(), nullable=False, comment='Lease ID from parent repair'),
    sa.Column('vehicle_id', sa.Integer(), nullable=True, comment='Vehicle ID from parent repair'),
    sa.Column('medallion_id', sa.Integer(), nullable=True, comment='Medallion ID from parent repair'),
    sa.Column('week_start', sa.Date(), nullable=False, comment='Sunday 00:00:00 - start of payment week'),
    sa.Column('week_end', sa.Date(), nullable=False, comment='Saturday 23:59:59 - end of payment week'),
    sa.Column('due_date', sa.Date(), nullable=False, comment='Due date for this installment (typically Saturday)'),
    sa.Column('installment_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Amount due for this installment'),
    sa.Column('amount_paid', sa.Numeric(precision=10, scale=2), nullable=False, comment='Amount actually paid for this installment'),
    sa.Column('prior_balance', sa.Numeric(precision=10, scale=2), nullable=False, comment='Unpaid balance carried forward from previous periods'),
    sa.Column('balance', sa.Numeric(precision=10, scale=2), nullable=False, comment='Remaining balance after this installment'),
    sa.Column('status', sa.Enum('SCHEDULED', 'DUE', 'POSTED', 'PAID', name='installmentstatus'), nullable=False, comment='Current status of installment'),
    sa.Column('posted_to_ledger', sa.Integer(), nullable=False, comment='0=not posted, 1=posted to ledger'),
    sa.Column('ledger_posting_id', sa.String(length=50), nullable=True, comment='Ledger posting ID when posted'),
    sa.Column('ledger_balance_id', sa.String(length=50), nullable=True, comment='Ledger balance ID when posted'),
    sa.Column('posted_at', sa.DateTime(), nullable=True, comment='Timestamp when posted to ledger'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when this record was last updated'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['repair_id'], ['vehicle_repairs.id'], ),
    sa.PrimaryKeyConstraint('installment_id')
    )
    op.create_index('idx_installments_driver_status', 'repair_installments', ['driver_id', 'status'], unique=False)
    op.create_index('idx_installments_lease', 'repair_installments', ['lease_id', 'status'], unique=False)
    op.create_index('idx_installments_repair', 'repair_installments', ['repair_id', 'installment_number'], unique=False)
    op.create_index('idx_installments_unposted', 'repair_installments', ['posted_to_ledger', 'week_start'], unique=False)
    op.create_index('idx_installments_week_start', 'repair_installments', ['week_start'], unique=False)
    op.create_index(op.f('ix_repair_installments_driver_id'), 'repair_installments', ['driver_id'], unique=False)
    op.create_index(op.f('ix_repair_installments_due_date'), 'repair_installments', ['due_date'], unique=False)
    op.create_index(op.f('ix_repair_installments_lease_id'), 'repair_installments', ['lease_id'], unique=False)
    op.create_index(op.f('ix_repair_installments_medallion_id'), 'repair_installments', ['medallion_id'], unique=False)
    op.create_index(op.f('ix_repair_installments_posted_to_ledger'), 'repair_installments', ['posted_to_ledger'], unique=False)
    op.create_index(op.f('ix_repair_installments_repair_id'), 'repair_installments', ['repair_id'], unique=False)
    op.create_index(op.f('ix_repair_installments_status'), 'repair_installments', ['status'], unique=False)
    op.create_index(op.f('ix_repair_installments_vehicle_id'), 'repair_installments', ['vehicle_id'], unique=False)
    op.create_index(op.f('ix_repair_installments_week_start'), 'repair_installments', ['week_start'], unique=False)
    op.add_column('vehicle_repairs', sa.Column('repair_id', sa.String(length=50), nullable=False, comment='Unique repair identifier (e.g., RPR-2025-001)'))
    op.add_column('vehicle_repairs', sa.Column('driver_id', sa.Integer(), nullable=False, comment='Driver responsible for repair payment'))
    op.add_column('vehicle_repairs', sa.Column('lease_id', sa.Integer(), nullable=False, comment='Active lease at time of repair'))
    op.add_column('vehicle_repairs', sa.Column('medallion_id', sa.Integer(), nullable=True, comment='Medallion associated with vehicle'))
    op.add_column('vehicle_repairs', sa.Column('vin', sa.String(length=50), nullable=True, comment='Vehicle VIN number'))
    op.add_column('vehicle_repairs', sa.Column('plate_number', sa.String(length=20), nullable=True, comment='Vehicle plate number'))
    op.add_column('vehicle_repairs', sa.Column('hack_license', sa.String(length=50), nullable=True, comment='Driver TLC hack license number'))
    op.add_column('vehicle_repairs', sa.Column('invoice_number', sa.String(length=100), nullable=False, comment='Repair invoice number from workshop'))
    op.add_column('vehicle_repairs', sa.Column('workshop_type', sa.Enum('BIG_APPLE', 'EXTERNAL', name='workshoptype'), nullable=False, comment='Big Apple Workshop or External Workshop'))
    op.add_column('vehicle_repairs', sa.Column('repair_description', sa.Text(), nullable=True, comment='Description of repair work performed'))
    op.add_column('vehicle_repairs', sa.Column('repair_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Total repair invoice amount'))
    op.add_column('vehicle_repairs', sa.Column('start_week', sa.Enum('CURRENT', 'NEXT', name='startweekoption'), nullable=False, comment='When repayments begin (Current or Next period)'))
    op.add_column('vehicle_repairs', sa.Column('start_week_date', sa.Date(), nullable=False, comment='Actual Sunday date when first installment is due'))
    op.add_column('vehicle_repairs', sa.Column('weekly_installment_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Standard weekly installment from payment matrix'))
    op.add_column('vehicle_repairs', sa.Column('total_paid', sa.Numeric(precision=10, scale=2), nullable=False, comment='Total amount paid to date across all installments'))
    op.add_column('vehicle_repairs', sa.Column('outstanding_balance', sa.Numeric(precision=10, scale=2), nullable=False, comment='Remaining unpaid balance'))
    op.add_column('vehicle_repairs', sa.Column('hold_reason', sa.Text(), nullable=True, comment='Reason if status is HOLD'))
    op.add_column('vehicle_repairs', sa.Column('cancelled_reason', sa.Text(), nullable=True, comment='Reason if status is CANCELLED'))
    op.add_column('vehicle_repairs', sa.Column('invoice_document_id', sa.Integer(), nullable=True, comment='Link to uploaded invoice document'))
    op.add_column('vehicle_repairs', sa.Column('confirmed_at', sa.DateTime(), nullable=True, comment='When invoice was confirmed and schedule generated'))
    op.add_column('vehicle_repairs', sa.Column('closed_at', sa.DateTime(), nullable=True, comment='When all installments were paid and balance = 0'))
    op.alter_column('vehicle_repairs', 'id',
               existing_type=mysql.INTEGER(),
               comment='Internal unique identifier',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('vehicle_repairs', 'vehicle_id',
               existing_type=mysql.INTEGER(),
               comment='Vehicle that was repaired',
               existing_nullable=False)
    op.alter_column('vehicle_repairs', 'invoice_date',
               existing_type=sa.DATE(),
               nullable=False,
               comment='Date repair invoice was issued')
    op.alter_column('vehicle_repairs', 'status',
               existing_type=mysql.VARCHAR(length=20),
               type_=sa.Enum('DRAFT', 'OPEN', 'CLOSED', 'HOLD', 'CANCELLED', name='repairstatus'),
               comment='Current status of repair invoice',
               existing_nullable=False)
    op.create_index('idx_repairs_driver_status', 'vehicle_repairs', ['driver_id', 'status'], unique=False)
    op.create_index('idx_repairs_invoice_date', 'vehicle_repairs', ['invoice_date'], unique=False)
    op.create_index('idx_repairs_lease_status', 'vehicle_repairs', ['lease_id', 'status'], unique=False)
    op.create_index('idx_repairs_vehicle', 'vehicle_repairs', ['vehicle_id'], unique=False)
    op.create_index(op.f('ix_vehicle_repairs_driver_id'), 'vehicle_repairs', ['driver_id'], unique=False)
    op.create_index(op.f('ix_vehicle_repairs_invoice_date'), 'vehicle_repairs', ['invoice_date'], unique=False)
    op.create_index(op.f('ix_vehicle_repairs_invoice_number'), 'vehicle_repairs', ['invoice_number'], unique=False)
    op.create_index(op.f('ix_vehicle_repairs_lease_id'), 'vehicle_repairs', ['lease_id'], unique=False)
    op.create_index(op.f('ix_vehicle_repairs_medallion_id'), 'vehicle_repairs', ['medallion_id'], unique=False)
    op.create_index(op.f('ix_vehicle_repairs_plate_number'), 'vehicle_repairs', ['plate_number'], unique=False)
    op.create_index(op.f('ix_vehicle_repairs_status'), 'vehicle_repairs', ['status'], unique=False)
    op.create_index(op.f('ix_vehicle_repairs_vehicle_id'), 'vehicle_repairs', ['vehicle_id'], unique=False)
    op.create_unique_constraint(None, 'vehicle_repairs', ['repair_id'])
    op.create_foreign_key(None, 'vehicle_repairs', 'leases', ['lease_id'], ['id'])
    op.create_foreign_key(None, 'vehicle_repairs', 'medallions', ['medallion_id'], ['id'])
    op.create_foreign_key(None, 'vehicle_repairs', 'drivers', ['driver_id'], ['id'])
    op.create_foreign_key(None, 'vehicle_repairs', 'document', ['invoice_document_id'], ['id'])
    op.drop_column('vehicle_repairs', 'vehicle_out_date')
    op.drop_column('vehicle_repairs', 'invoice_amount')
    op.drop_column('vehicle_repairs', 'next_service_due_by')
    op.drop_column('vehicle_repairs', 'vehicle_out_time')
    op.drop_column('vehicle_repairs', 'vehicle_in_date')
    op.drop_column('vehicle_repairs', 'vehicle_in_time')
    op.drop_column('vehicle_repairs', 'remarks')
    op.drop_column('vehicle_repairs', 'repair_paid_by')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('vehicle_repairs', sa.Column('repair_paid_by', mysql.VARCHAR(length=10), nullable=True))
    op.add_column('vehicle_repairs', sa.Column('remarks', mysql.TEXT(), nullable=True))
    op.add_column('vehicle_repairs', sa.Column('vehicle_in_time', mysql.VARCHAR(length=10), nullable=True))
    op.add_column('vehicle_repairs', sa.Column('vehicle_in_date', sa.DATE(), nullable=True))
    op.add_column('vehicle_repairs', sa.Column('vehicle_out_time', mysql.VARCHAR(length=10), nullable=True))
    op.add_column('vehicle_repairs', sa.Column('next_service_due_by', sa.DATE(), nullable=True))
    op.add_column('vehicle_repairs', sa.Column('invoice_amount', mysql.FLOAT(), nullable=True))
    op.add_column('vehicle_repairs', sa.Column('vehicle_out_date', sa.DATE(), nullable=True))
    op.drop_constraint(None, 'vehicle_repairs', type_='foreignkey')
    op.drop_constraint(None, 'vehicle_repairs', type_='foreignkey')
    op.drop_constraint(None, 'vehicle_repairs', type_='foreignkey')
    op.drop_constraint(None, 'vehicle_repairs', type_='foreignkey')
    op.drop_constraint(None, 'vehicle_repairs', type_='unique')
    op.drop_index(op.f('ix_vehicle_repairs_vehicle_id'), table_name='vehicle_repairs')
    op.drop_index(op.f('ix_vehicle_repairs_status'), table_name='vehicle_repairs')
    op.drop_index(op.f('ix_vehicle_repairs_plate_number'), table_name='vehicle_repairs')
    op.drop_index(op.f('ix_vehicle_repairs_medallion_id'), table_name='vehicle_repairs')
    op.drop_index(op.f('ix_vehicle_repairs_lease_id'), table_name='vehicle_repairs')
    op.drop_index(op.f('ix_vehicle_repairs_invoice_number'), table_name='vehicle_repairs')
    op.drop_index(op.f('ix_vehicle_repairs_invoice_date'), table_name='vehicle_repairs')
    op.drop_index(op.f('ix_vehicle_repairs_driver_id'), table_name='vehicle_repairs')
    op.drop_index('idx_repairs_vehicle', table_name='vehicle_repairs')
    op.drop_index('idx_repairs_lease_status', table_name='vehicle_repairs')
    op.drop_index('idx_repairs_invoice_date', table_name='vehicle_repairs')
    op.drop_index('idx_repairs_driver_status', table_name='vehicle_repairs')
    op.alter_column('vehicle_repairs', 'status',
               existing_type=sa.Enum('DRAFT', 'OPEN', 'CLOSED', 'HOLD', 'CANCELLED', name='repairstatus'),
               type_=mysql.VARCHAR(length=20),
               comment=None,
               existing_comment='Current status of repair invoice',
               existing_nullable=False)
    op.alter_column('vehicle_repairs', 'invoice_date',
               existing_type=sa.DATE(),
               nullable=True,
               comment=None,
               existing_comment='Date repair invoice was issued')
    op.alter_column('vehicle_repairs', 'vehicle_id',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='Vehicle that was repaired',
               existing_nullable=False)
    op.alter_column('vehicle_repairs', 'id',
               existing_type=mysql.INTEGER(),
               comment=None,
               existing_comment='Internal unique identifier',
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('vehicle_repairs', 'closed_at')
    op.drop_column('vehicle_repairs', 'confirmed_at')
    op.drop_column('vehicle_repairs', 'invoice_document_id')
    op.drop_column('vehicle_repairs', 'cancelled_reason')
    op.drop_column('vehicle_repairs', 'hold_reason')
    op.drop_column('vehicle_repairs', 'outstanding_balance')
    op.drop_column('vehicle_repairs', 'total_paid')
    op.drop_column('vehicle_repairs', 'weekly_installment_amount')
    op.drop_column('vehicle_repairs', 'start_week_date')
    op.drop_column('vehicle_repairs', 'start_week')
    op.drop_column('vehicle_repairs', 'repair_amount')
    op.drop_column('vehicle_repairs', 'repair_description')
    op.drop_column('vehicle_repairs', 'workshop_type')
    op.drop_column('vehicle_repairs', 'invoice_number')
    op.drop_column('vehicle_repairs', 'hack_license')
    op.drop_column('vehicle_repairs', 'plate_number')
    op.drop_column('vehicle_repairs', 'vin')
    op.drop_column('vehicle_repairs', 'medallion_id')
    op.drop_column('vehicle_repairs', 'lease_id')
    op.drop_column('vehicle_repairs', 'driver_id')
    op.drop_column('vehicle_repairs', 'repair_id')
    op.drop_index(op.f('ix_repair_installments_week_start'), table_name='repair_installments')
    op.drop_index(op.f('ix_repair_installments_vehicle_id'), table_name='repair_installments')
    op.drop_index(op.f('ix_repair_installments_status'), table_name='repair_installments')
    op.drop_index(op.f('ix_repair_installments_repair_id'), table_name='repair_installments')
    op.drop_index(op.f('ix_repair_installments_posted_to_ledger'), table_name='repair_installments')
    op.drop_index(op.f('ix_repair_installments_medallion_id'), table_name='repair_installments')
    op.drop_index(op.f('ix_repair_installments_lease_id'), table_name='repair_installments')
    op.drop_index(op.f('ix_repair_installments_due_date'), table_name='repair_installments')
    op.drop_index(op.f('ix_repair_installments_driver_id'), table_name='repair_installments')
    op.drop_index('idx_installments_week_start', table_name='repair_installments')
    op.drop_index('idx_installments_unposted', table_name='repair_installments')
    op.drop_index('idx_installments_repair', table_name='repair_installments')
    op.drop_index('idx_installments_lease', table_name='repair_installments')
    op.drop_index('idx_installments_driver_status', table_name='repair_installments')
    op.drop_table('repair_installments')
    # ### end Alembic commands ###
