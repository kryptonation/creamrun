"""fix_posting_id_unique_constraint

Revision ID: 40cbcdc03877
Revises: 
Create Date: 2025-10-27 12:52:34.495884

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '40cbcdc03877'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ledger_postings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('posting_id', sa.String(length=64), nullable=False, comment='Unique posting ID (Format: LP-YYYY-NNNNNN)'),
    sa.Column('driver_id', sa.Integer(), nullable=False, comment='Driver responsible for this transaction'),
    sa.Column('lease_id', sa.Integer(), nullable=False, comment='Lease context for this transaction'),
    sa.Column('vehicle_id', sa.Integer(), nullable=True, comment='Associated vehicle (if applicable)'),
    sa.Column('medallion_id', sa.Integer(), nullable=True, comment='Associated medallion (if applicable)'),
    sa.Column('posting_type', sa.Enum('DEBIT', 'CREDIT', name='postingtype'), nullable=False, comment='DEBIT (obligation) or CREDIT (payment/earning)'),
    sa.Column('category', sa.Enum('EARNINGS', 'TAXES', 'EZPASS', 'LEASE', 'PVB', 'TLC', 'REPAIRS', 'LOANS', 'DEPOSITS', 'MISC', name='postingcategory'), nullable=False, comment='Financial category for payment hierarchy'),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Transaction amount (always positive)'),
    sa.Column('source_type', sa.String(length=128), nullable=False, comment='Source system (e.g., CURB_TRIP, EZPASS_TRANSACTION, LEASE_SCHEDULE)'),
    sa.Column('source_id', sa.String(length=128), nullable=False, comment='Source record ID'),
    sa.Column('payment_period_start', sa.DateTime(), nullable=False, comment='Start of payment week (Sunday 00:00:00)'),
    sa.Column('payment_period_end', sa.DateTime(), nullable=False, comment='End of payment week (Saturday 23:59:59)'),
    sa.Column('status', sa.Enum('PENDING', 'POSTED', 'VOIDED', name='postingstatus'), nullable=False, comment='Current status of posting'),
    sa.Column('posted_at', sa.DateTime(), nullable=True, comment='When posting was finalized'),
    sa.Column('posted_by', sa.Integer(), nullable=True, comment='User who posted the transaction'),
    sa.Column('voided_by_posting_id', sa.String(length=64), nullable=True, comment='Posting ID that voided this entry'),
    sa.Column('voided_at', sa.DateTime(), nullable=True, comment='When posting was voided'),
    sa.Column('void_reason', sa.Text(), nullable=True, comment='Reason for voting'),
    sa.Column('description', sa.Text(), nullable=True, comment='Human-readable description'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Additional notes'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when this record was last updated'),
    sa.CheckConstraint('amount > 0', name='check_amount_positive'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['lease_id'], ['leases.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['medallion_id'], ['medallions.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['posted_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['voided_by_posting_id'], ['ledger_postings.posting_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('posting_id', name='uq_ledger_postings_posting_id')
    )
    op.create_index('idx_posting_category_status', 'ledger_postings', ['category', 'status'], unique=False)
    op.create_index('idx_posting_driver_lease', 'ledger_postings', ['driver_id', 'lease_id'], unique=False)
    op.create_index('idx_posting_period', 'ledger_postings', ['payment_period_start', 'payment_period_end'], unique=False)
    op.create_index(op.f('ix_ledger_postings_category'), 'ledger_postings', ['category'], unique=False)
    op.create_index(op.f('ix_ledger_postings_driver_id'), 'ledger_postings', ['driver_id'], unique=False)
    op.create_index(op.f('ix_ledger_postings_id'), 'ledger_postings', ['id'], unique=False)
    op.create_index(op.f('ix_ledger_postings_lease_id'), 'ledger_postings', ['lease_id'], unique=False)
    op.create_index(op.f('ix_ledger_postings_medallion_id'), 'ledger_postings', ['medallion_id'], unique=False)
    op.create_index(op.f('ix_ledger_postings_payment_period_end'), 'ledger_postings', ['payment_period_end'], unique=False)
    op.create_index(op.f('ix_ledger_postings_payment_period_start'), 'ledger_postings', ['payment_period_start'], unique=False)
    op.create_index(op.f('ix_ledger_postings_posting_id'), 'ledger_postings', ['posting_id'], unique=False)
    op.create_index(op.f('ix_ledger_postings_posting_type'), 'ledger_postings', ['posting_type'], unique=False)
    op.create_index(op.f('ix_ledger_postings_source_id'), 'ledger_postings', ['source_id'], unique=False)
    op.create_index(op.f('ix_ledger_postings_source_type'), 'ledger_postings', ['source_type'], unique=False)
    op.create_index(op.f('ix_ledger_postings_status'), 'ledger_postings', ['status'], unique=False)
    op.create_index(op.f('ix_ledger_postings_vehicle_id'), 'ledger_postings', ['vehicle_id'], unique=False)
    op.create_index(op.f('ix_ledger_postings_voided_by_posting_id'), 'ledger_postings', ['voided_by_posting_id'], unique=False)
    op.create_table('lease_driver_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lease_driver_id', sa.Integer(), nullable=False, comment='Foreign Key to Lease Driver Table'),
    sa.Column('document_envelope_id', sa.String(length=120), nullable=True, comment='Document envelope id that is present in DocuSign'),
    sa.Column('has_frontend_signed', sa.Boolean(), nullable=True),
    sa.Column('frontend_signed_date', sa.Date(), nullable=True),
    sa.Column('has_driver_signed', sa.Boolean(), nullable=True),
    sa.Column('driver_signed_date', sa.Date(), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True, comment='Associated document ID'),
    sa.Column('signing_type', sa.String(length=32), nullable=True, comment='Signature mode (free text)'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when this record was last updated'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['lease_driver_id'], ['lease_drivers.id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lease_driver_documents_document_id'), 'lease_driver_documents', ['document_id'], unique=False)
    op.create_index(op.f('ix_lease_driver_documents_id'), 'lease_driver_documents', ['id'], unique=False)
    op.create_table('payment_allocations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('allocation_id', sa.String(length=64), nullable=False, comment='Unique allocation ID (Format: PA-YYYY-NNNNNN)'),
    sa.Column('balance_id', sa.String(length=64), nullable=False, comment='Balance receiving payment'),
    sa.Column('payment_posting_id', sa.String(length=64), nullable=False, comment='Payment posting being applied'),
    sa.Column('amount_allocated', sa.Numeric(precision=10, scale=2), nullable=False, comment='Amount applied to this balance'),
    sa.Column('allocation_type', sa.Enum('DTR_ALLOCATION', 'INTERIM_PAYMENT', 'SCHEDULED_INSTALLMENT', 'MANUAL_ADJUSTMENT', 'VOID_REVERSAL', name='paymentreferencetype'), nullable=False, comment='Type of payment allocation'),
    sa.Column('allocation_date', sa.DateTime(), nullable=False, comment='When allocation was made'),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when this record was last updated'),
    sa.CheckConstraint('amount_allocated > 0', name='check_allocation_positive'),
    sa.ForeignKeyConstraint(['balance_id'], ['ledger_balances.balance_id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['payment_posting_id'], ['ledger_postings.posting_id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_allocation_balance', 'payment_allocations', ['balance_id', 'allocation_date'], unique=False)
    op.create_index(op.f('ix_payment_allocations_allocation_id'), 'payment_allocations', ['allocation_id'], unique=True)
    op.create_index(op.f('ix_payment_allocations_balance_id'), 'payment_allocations', ['balance_id'], unique=False)
    op.create_index(op.f('ix_payment_allocations_id'), 'payment_allocations', ['id'], unique=False)
    op.create_index(op.f('ix_payment_allocations_payment_posting_id'), 'payment_allocations', ['payment_posting_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payment_allocations_payment_posting_id'), table_name='payment_allocations')
    op.drop_index(op.f('ix_payment_allocations_id'), table_name='payment_allocations')
    op.drop_index(op.f('ix_payment_allocations_balance_id'), table_name='payment_allocations')
    op.drop_index(op.f('ix_payment_allocations_allocation_id'), table_name='payment_allocations')
    op.drop_index('idx_allocation_balance', table_name='payment_allocations')
    op.drop_table('payment_allocations')
    op.drop_index(op.f('ix_lease_driver_documents_id'), table_name='lease_driver_documents')
    op.drop_index(op.f('ix_lease_driver_documents_document_id'), table_name='lease_driver_documents')
    op.drop_table('lease_driver_documents')
    op.drop_index(op.f('ix_ledger_postings_voided_by_posting_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_vehicle_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_status'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_source_type'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_source_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_posting_type'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_posting_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_payment_period_start'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_payment_period_end'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_medallion_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_lease_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_driver_id'), table_name='ledger_postings')
    op.drop_index(op.f('ix_ledger_postings_category'), table_name='ledger_postings')
    op.drop_index('idx_posting_period', table_name='ledger_postings')
    op.drop_index('idx_posting_driver_lease', table_name='ledger_postings')
    op.drop_index('idx_posting_category_status', table_name='ledger_postings')
    op.drop_table('ledger_postings')
    # ### end Alembic commands ###
