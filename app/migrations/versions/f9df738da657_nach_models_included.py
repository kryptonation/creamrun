"""nach models included

Revision ID: f9df738da657
Revises: 165310e42815
Create Date: 2025-11-01 08:50:45.928212

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f9df738da657'
down_revision: Union[str, Sequence[str], None] = '165310e42815'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ach_batches',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='Primary key, auto-increment'),
    sa.Column('batch_number', sa.String(length=50), nullable=False, comment='Unique batch ID (YYMM-NNN format)'),
    sa.Column('batch_date', sa.Date(), nullable=False, comment='When batch was created'),
    sa.Column('effective_date', sa.Date(), nullable=False, comment='ACH effective date for bank processing'),
    sa.Column('total_payments', sa.Integer(), nullable=False, comment='Number of payments in batch'),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Sum of all payment amounts'),
    sa.Column('status', sa.Enum('CREATED', 'FILE_GENERATED', 'SUBMITTED', 'PROCESSED', 'FAILED', 'REVERSED', name='achbatchstatus'), nullable=False, comment='Current batch status'),
    sa.Column('nacha_file_generated', sa.Boolean(), nullable=False, comment='Whether NACHA file has been created'),
    sa.Column('nacha_file_s3_key', sa.String(length=500), nullable=True, comment='S3 path to stored NACHA file'),
    sa.Column('nacha_file_generated_on', sa.DateTime(), nullable=True, comment='Timestamp when NACHA file was created'),
    sa.Column('submitted_to_bank', sa.Boolean(), nullable=False, comment='Whether batch has been submitted for processing'),
    sa.Column('submitted_on', sa.DateTime(), nullable=True, comment='When batch was submitted to bank'),
    sa.Column('submitted_by', sa.Integer(), nullable=True, comment='User who submitted to bank'),
    sa.Column('bank_processed_on', sa.Date(), nullable=True, comment='When bank completed processing'),
    sa.Column('bank_confirmation_number', sa.String(length=100), nullable=True, comment="Bank's confirmation reference number"),
    sa.Column('reversed_on', sa.DateTime(), nullable=True, comment='When batch was reversed'),
    sa.Column('reversed_by', sa.Integer(), nullable=True, comment='User who reversed the batch'),
    sa.Column('reversal_reason', sa.Text(), nullable=True, comment='Reason for batch reversal'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when this record was last updated'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['reversed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['submitted_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_ach_batch_date', 'ach_batches', ['batch_date'], unique=False)
    op.create_index('idx_ach_batch_number', 'ach_batches', ['batch_number'], unique=False)
    op.create_index('idx_ach_batch_status', 'ach_batches', ['status'], unique=False)
    op.create_index(op.f('ix_ach_batches_batch_date'), 'ach_batches', ['batch_date'], unique=False)
    op.create_index(op.f('ix_ach_batches_batch_number'), 'ach_batches', ['batch_number'], unique=True)
    op.create_index(op.f('ix_ach_batches_status'), 'ach_batches', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ach_batches_status'), table_name='ach_batches')
    op.drop_index(op.f('ix_ach_batches_batch_number'), table_name='ach_batches')
    op.drop_index(op.f('ix_ach_batches_batch_date'), table_name='ach_batches')
    op.drop_index('idx_ach_batch_status', table_name='ach_batches')
    op.drop_index('idx_ach_batch_number', table_name='ach_batches')
    op.drop_index('idx_ach_batch_date', table_name='ach_batches')
    op.drop_table('ach_batches')
    # ### end Alembic commands ###
