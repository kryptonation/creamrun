"""dtr models inclusion

Revision ID: 165310e42815
Revises: d44691c4e60b
Create Date: 2025-10-31 10:48:20.851292

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '165310e42815'
down_revision: Union[str, Sequence[str], None] = 'd44691c4e60b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dtr_generation_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('generation_date', sa.DateTime(), nullable=False, comment='When generation was triggered'),
    sa.Column('period_start', sa.Date(), nullable=False, comment='Period start'),
    sa.Column('period_end', sa.Date(), nullable=False, comment='Period end'),
    sa.Column('total_dtrs_generated', sa.Integer(), nullable=False, comment='Number of DTRs successfully generated'),
    sa.Column('total_failed', sa.Integer(), nullable=False, comment='Number of failed DTR generations'),
    sa.Column('generation_time_seconds', sa.Numeric(precision=10, scale=2), nullable=True, comment='Time taken for generation'),
    sa.Column('status', sa.String(length=50), nullable=False, comment='Overall generation status'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='Error details if failed'),
    sa.Column('triggered_by', sa.String(length=50), nullable=False, comment='CELERY_TASK or USER'),
    sa.Column('triggered_by_user_id', sa.Integer(), nullable=True, comment='User who triggered (if manual)'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when this record was last updated'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['triggered_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Audit trail for DTR generation runs'
    )
    op.create_index('idx_generation_history_date', 'dtr_generation_history', ['generation_date'], unique=False)
    op.create_index('idx_generation_history_period', 'dtr_generation_history', ['period_start', 'period_end'], unique=False)
    op.create_table('dtr',
    sa.Column('dtr_id', sa.String(length=50), nullable=False, comment='Unique DTR identifier (DTR-{lease_id}-{period})'),
    sa.Column('receipt_number', sa.String(length=50), nullable=False, comment='System-generated receipt number'),
    sa.Column('receipt_date', sa.Date(), nullable=False, comment='Date DTR was generated'),
    sa.Column('period_start', sa.Date(), nullable=False, comment='Payment period start (Sunday)'),
    sa.Column('period_end', sa.Date(), nullable=False, comment='Payment period end (Saturday)'),
    sa.Column('lease_id', sa.Integer(), nullable=False, comment='Associated lease'),
    sa.Column('driver_id', sa.Integer(), nullable=False, comment='Primary driver'),
    sa.Column('vehicle_id', sa.Integer(), nullable=True, comment='Associated vehicle'),
    sa.Column('medallion_id', sa.Integer(), nullable=True, comment='Associated medallion'),
    sa.Column('cc_earnings', sa.Numeric(precision=10, scale=2), nullable=False, comment='Credit card earnings'),
    sa.Column('cash_earnings', sa.Numeric(precision=10, scale=2), nullable=False, comment='Cash earnings (self-reported)'),
    sa.Column('total_earnings', sa.Numeric(precision=10, scale=2), nullable=False, comment='Total gross earnings'),
    sa.Column('taxes_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Total taxes (MTA, TIF, etc)'),
    sa.Column('ezpass_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='EZPass tolls'),
    sa.Column('lease_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Weekly lease fee'),
    sa.Column('pvb_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='PVB violations'),
    sa.Column('tlc_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='TLC tickets'),
    sa.Column('repairs_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Repair installments'),
    sa.Column('loans_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Loan installments'),
    sa.Column('misc_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Miscellaneous charges'),
    sa.Column('total_deductions', sa.Numeric(precision=10, scale=2), nullable=False, comment='Total deductions'),
    sa.Column('prior_balance', sa.Numeric(precision=10, scale=2), nullable=False, comment='Prior period balance carried forward'),
    sa.Column('net_earnings', sa.Numeric(precision=10, scale=2), nullable=False, comment='Earnings minus deductions'),
    sa.Column('total_due', sa.Numeric(precision=10, scale=2), nullable=False, comment='Net amount due to/from driver'),
    sa.Column('payment_type', sa.Enum('ACH', 'CHECK', 'PENDING', name='dtrpaymenttype'), nullable=False, comment='Payment method'),
    sa.Column('batch_number', sa.String(length=50), nullable=True, comment='ACH batch number or Check number'),
    sa.Column('payment_date', sa.Date(), nullable=True, comment='Date payment was processed'),
    sa.Column('deposit_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Security deposit on file'),
    sa.Column('pdf_s3_key', sa.String(length=500), nullable=True, comment='S3 key for generated PDF'),
    sa.Column('pdf_url', sa.String(length=1000), nullable=True, comment='Presigned URL for PDF access'),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'GENERATED', 'FAILED', 'VOIDED', name='dtrstatus'), nullable=False, comment='DTR status'),
    sa.Column('generated_at', sa.DateTime(), nullable=True, comment='Timestamp when DTR was generated'),
    sa.Column('generated_by_user_id', sa.Integer(), nullable=True, comment='User who triggered generation'),
    sa.Column('voided_at', sa.DateTime(), nullable=True, comment='Timestamp when DTR was voided'),
    sa.Column('voided_by_user_id', sa.Integer(), nullable=True, comment='User who voided DTR'),
    sa.Column('voided_reason', sa.Text(), nullable=True, comment='Reason for voiding'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when this record was last updated'),
    sa.CheckConstraint('period_start <= period_end', name='check_period_dates'),
    sa.CheckConstraint('total_deductions >= 0', name='check_total_deductions_positive'),
    sa.CheckConstraint('total_earnings >= 0', name='check_total_earnings_positive'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
    sa.ForeignKeyConstraint(['generated_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['lease_id'], ['leases.id'], ),
    sa.ForeignKeyConstraint(['medallion_id'], ['medallions.id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], ),
    sa.ForeignKeyConstraint(['voided_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('dtr_id'),
    comment='Driver Transaction Reports - Weekly earnings and deductions summary'
    )
    op.create_index('idx_dtr_driver_period', 'dtr', ['driver_id', 'period_start', 'period_end'], unique=False)
    op.create_index('idx_dtr_lease_period', 'dtr', ['lease_id', 'period_start', 'period_end'], unique=False)
    op.create_index('idx_dtr_status_period', 'dtr', ['status', 'period_start'], unique=False)
    op.create_index(op.f('ix_dtr_driver_id'), 'dtr', ['driver_id'], unique=False)
    op.create_index(op.f('ix_dtr_lease_id'), 'dtr', ['lease_id'], unique=False)
    op.create_index(op.f('ix_dtr_receipt_number'), 'dtr', ['receipt_number'], unique=True)
    op.create_index(op.f('ix_dtr_status'), 'dtr', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_dtr_status'), table_name='dtr')
    op.drop_index(op.f('ix_dtr_receipt_number'), table_name='dtr')
    op.drop_index(op.f('ix_dtr_lease_id'), table_name='dtr')
    op.drop_index(op.f('ix_dtr_driver_id'), table_name='dtr')
    op.drop_index('idx_dtr_status_period', table_name='dtr')
    op.drop_index('idx_dtr_lease_period', table_name='dtr')
    op.drop_index('idx_dtr_driver_period', table_name='dtr')
    op.drop_table('dtr')
    op.drop_index('idx_generation_history_period', table_name='dtr_generation_history')
    op.drop_index('idx_generation_history_date', table_name='dtr_generation_history')
    op.drop_table('dtr_generation_history')
    # ### end Alembic commands ###
