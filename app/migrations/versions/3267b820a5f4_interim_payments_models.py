"""interim payments models

Revision ID: 3267b820a5f4
Revises: bf4fff39e5f5
Create Date: 2025-10-29 14:37:48.186332

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3267b820a5f4'
down_revision: Union[str, Sequence[str], None] = 'bf4fff39e5f5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('interim_payments',
    sa.Column('id', sa.Integer(), nullable=False, comment='Auto-increment primary key'),
    sa.Column('payment_id', sa.String(length=50), nullable=False, comment='Unique payment identifier (IP-YYYY-NNNNNN)'),
    sa.Column('driver_id', sa.Integer(), nullable=False, comment='Reference to driver making payment'),
    sa.Column('lease_id', sa.Integer(), nullable=False, comment='Reference to active lease'),
    sa.Column('vehicle_id', sa.Integer(), nullable=True, comment='Reference to vehicle (optional)'),
    sa.Column('medallion_id', sa.Integer(), nullable=True, comment='Reference to medallion (optional)'),
    sa.Column('payment_date', sa.DateTime(), nullable=False, comment='Date and time when payment was received'),
    sa.Column('payment_method', sa.Enum('CASH', 'CHECK', 'ACH', 'WIRE', 'CREDIT_CARD', 'MONEY_ORDER', name='paymentmethod'), nullable=False, comment='Method of payment (Cash, Check, ACH, etc.)'),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Total payment amount received'),
    sa.Column('allocated_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Total amount allocated across obligations'),
    sa.Column('unallocated_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Amount not yet allocated (should be 0 after processing)'),
    sa.Column('check_number', sa.String(length=100), nullable=True, comment='Check number if payment method is CHECK'),
    sa.Column('reference_number', sa.String(length=100), nullable=True, comment='Transaction reference (ACH confirmation, wire number, etc.)'),
    sa.Column('status', sa.Enum('PENDING', 'POSTED', 'PARTIALLY_POSTED', 'FAILED', 'VOIDED', name='paymentstatus'), nullable=False, comment='Current status of payment processing'),
    sa.Column('posted_to_ledger', sa.Integer(), nullable=False, comment='Flag: 1 = posted to ledger, 0 = not posted'),
    sa.Column('posted_at', sa.DateTime(), nullable=True, comment='Timestamp when payment was posted to ledger'),
    sa.Column('posted_by', sa.Integer(), nullable=True, comment='User who posted the payment to ledger'),
    sa.Column('receipt_number', sa.String(length=50), nullable=True, comment='Receipt number for driver records'),
    sa.Column('receipt_generated_at', sa.DateTime(), nullable=True, comment='Timestamp when receipt was generated'),
    sa.Column('description', sa.Text(), nullable=True, comment='Description of payment purpose'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Internal notes about the payment'),
    sa.Column('received_by', sa.Integer(), nullable=True, comment='Cashier/user who received the payment'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='Error message if posting failed'),
    sa.Column('voided_at', sa.DateTime(), nullable=True, comment='Timestamp when payment was voided'),
    sa.Column('voided_by', sa.Integer(), nullable=True, comment='User who voided the payment'),
    sa.Column('voided_reason', sa.Text(), nullable=True, comment='Reason for voiding the payment'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when this record was last updated'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
    sa.ForeignKeyConstraint(['lease_id'], ['leases.id'], ),
    sa.ForeignKeyConstraint(['medallion_id'], ['medallions.id'], ),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['posted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['received_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], ),
    sa.ForeignKeyConstraint(['voided_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('receipt_number')
    )
    op.create_index('idx_interim_payment_date', 'interim_payments', ['payment_date'], unique=False)
    op.create_index('idx_interim_payment_driver_date', 'interim_payments', ['driver_id', 'payment_date'], unique=False)
    op.create_index('idx_interim_payment_lease_date', 'interim_payments', ['lease_id', 'payment_date'], unique=False)
    op.create_index('idx_interim_payment_status', 'interim_payments', ['status', 'posted_to_ledger'], unique=False)
    op.create_index(op.f('ix_interim_payments_driver_id'), 'interim_payments', ['driver_id'], unique=False)
    op.create_index(op.f('ix_interim_payments_id'), 'interim_payments', ['id'], unique=False)
    op.create_index(op.f('ix_interim_payments_lease_id'), 'interim_payments', ['lease_id'], unique=False)
    op.create_index(op.f('ix_interim_payments_medallion_id'), 'interim_payments', ['medallion_id'], unique=False)
    op.create_index(op.f('ix_interim_payments_payment_id'), 'interim_payments', ['payment_id'], unique=True)
    op.create_index(op.f('ix_interim_payments_status'), 'interim_payments', ['status'], unique=False)
    op.create_index(op.f('ix_interim_payments_vehicle_id'), 'interim_payments', ['vehicle_id'], unique=False)
    op.create_table('payment_allocation_details',
    sa.Column('id', sa.Integer(), nullable=False, comment='Auto-increment primary key'),
    sa.Column('allocation_id', sa.String(length=50), nullable=False, comment='Unique allocation identifier (AL-YYYY-NNNNNN)'),
    sa.Column('payment_id', sa.Integer(), nullable=False, comment='Reference to parent interim payment'),
    sa.Column('category', sa.Enum('LEASE', 'REPAIRS', 'LOANS', 'EZPASS', 'PVB', 'TLC', 'MISC', name='allocationcategory'), nullable=False, comment='Category of obligation being paid (Lease, Repair, Loan, etc.)'),
    sa.Column('ledger_balance_id', sa.String(length=50), nullable=True, comment='Reference to ledger balance being paid'),
    sa.Column('reference_type', sa.String(length=50), nullable=False, comment='Type of reference (REPAIR_INSTALLMENT, LOAN_INSTALLMENT, etc.)'),
    sa.Column('reference_id', sa.String(length=100), nullable=False, comment='ID of the specific obligation being paid'),
    sa.Column('obligation_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Original obligation amount before payment'),
    sa.Column('allocated_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Amount allocated to this obligation'),
    sa.Column('remaining_balance', sa.Numeric(precision=10, scale=2), nullable=False, comment='Balance remaining after this allocation'),
    sa.Column('posted_to_ledger', sa.Integer(), nullable=False, comment='Flag: 1 = posted to ledger, 0 = not posted'),
    sa.Column('ledger_posting_id', sa.String(length=50), nullable=True, comment='Reference to ledger posting created for this allocation'),
    sa.Column('posted_at', sa.DateTime(), nullable=True, comment='Timestamp when allocation was posted to ledger'),
    sa.Column('description', sa.Text(), nullable=True, comment='Description of the obligation'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Internal notes about this allocation'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='Error message if posting failed'),
    sa.Column('allocation_sequence', sa.Integer(), nullable=False, comment='Order of allocation within the payment'),
    sa.Column('is_archived', sa.Boolean(), nullable=True, comment='Flag indicating if the record is archived'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Flag to keep track of record is active or not'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='User who created this record'),
    sa.Column('modified_by', sa.Integer(), nullable=True, comment='User who last modified this record'),
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when this record was created'),
    sa.Column('updated_on', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when this record was last updated'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['payment_id'], ['interim_payments.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_allocation_category_ref', 'payment_allocation_details', ['category', 'reference_id'], unique=False)
    op.create_index('idx_allocation_ledger_balance', 'payment_allocation_details', ['ledger_balance_id'], unique=False)
    op.create_index('idx_allocation_payment', 'payment_allocation_details', ['payment_id', 'allocation_sequence'], unique=False)
    op.create_index('idx_allocation_posted', 'payment_allocation_details', ['posted_to_ledger', 'posted_at'], unique=False)
    op.create_index(op.f('ix_payment_allocation_details_allocation_id'), 'payment_allocation_details', ['allocation_id'], unique=True)
    op.create_index(op.f('ix_payment_allocation_details_category'), 'payment_allocation_details', ['category'], unique=False)
    op.create_index(op.f('ix_payment_allocation_details_id'), 'payment_allocation_details', ['id'], unique=False)
    op.create_index(op.f('ix_payment_allocation_details_ledger_balance_id'), 'payment_allocation_details', ['ledger_balance_id'], unique=False)
    op.create_index(op.f('ix_payment_allocation_details_payment_id'), 'payment_allocation_details', ['payment_id'], unique=False)
    op.create_index(op.f('ix_payment_allocation_details_reference_id'), 'payment_allocation_details', ['reference_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payment_allocation_details_reference_id'), table_name='payment_allocation_details')
    op.drop_index(op.f('ix_payment_allocation_details_payment_id'), table_name='payment_allocation_details')
    op.drop_index(op.f('ix_payment_allocation_details_ledger_balance_id'), table_name='payment_allocation_details')
    op.drop_index(op.f('ix_payment_allocation_details_id'), table_name='payment_allocation_details')
    op.drop_index(op.f('ix_payment_allocation_details_category'), table_name='payment_allocation_details')
    op.drop_index(op.f('ix_payment_allocation_details_allocation_id'), table_name='payment_allocation_details')
    op.drop_index('idx_allocation_posted', table_name='payment_allocation_details')
    op.drop_index('idx_allocation_payment', table_name='payment_allocation_details')
    op.drop_index('idx_allocation_ledger_balance', table_name='payment_allocation_details')
    op.drop_index('idx_allocation_category_ref', table_name='payment_allocation_details')
    op.drop_table('payment_allocation_details')
    op.drop_index(op.f('ix_interim_payments_vehicle_id'), table_name='interim_payments')
    op.drop_index(op.f('ix_interim_payments_status'), table_name='interim_payments')
    op.drop_index(op.f('ix_interim_payments_payment_id'), table_name='interim_payments')
    op.drop_index(op.f('ix_interim_payments_medallion_id'), table_name='interim_payments')
    op.drop_index(op.f('ix_interim_payments_lease_id'), table_name='interim_payments')
    op.drop_index(op.f('ix_interim_payments_id'), table_name='interim_payments')
    op.drop_index(op.f('ix_interim_payments_driver_id'), table_name='interim_payments')
    op.drop_index('idx_interim_payment_status', table_name='interim_payments')
    op.drop_index('idx_interim_payment_lease_date', table_name='interim_payments')
    op.drop_index('idx_interim_payment_driver_date', table_name='interim_payments')
    op.drop_index('idx_interim_payment_date', table_name='interim_payments')
    op.drop_table('interim_payments')
    # ### end Alembic commands ###
